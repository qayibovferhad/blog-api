{"version":3,"file":"static/js/972.2409be32.chunk.js","mappings":"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","sources":["../node_modules/antd/es/skeleton/Element.js","../node_modules/antd/es/skeleton/style/index.js","../node_modules/antd/es/skeleton/Avatar.js","../node_modules/antd/es/skeleton/Button.js","../node_modules/@ant-design/icons-svg/es/asn/DotChartOutlined.js","../node_modules/@ant-design/icons/es/icons/DotChartOutlined.js","../node_modules/antd/es/skeleton/Node.js","../node_modules/antd/es/skeleton/Image.js","../node_modules/antd/es/skeleton/Input.js","../node_modules/antd/es/skeleton/Paragraph.js","../node_modules/antd/es/skeleton/Title.js","../node_modules/antd/es/skeleton/Skeleton.js","../node_modules/antd/es/skeleton/index.js","pages/Chat/Chat.js","../node_modules/@ant-design/icons-svg/es/asn/CloseOutlined.js","../node_modules/@ant-design/icons/es/icons/CloseOutlined.js"],"sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nconst Element = props => {\n  const {\n    prefixCls,\n    className,\n    style,\n    size,\n    shape\n  } = props;\n  const sizeCls = classNames({\n    [`${prefixCls}-lg`]: size === 'large',\n    [`${prefixCls}-sm`]: size === 'small'\n  });\n  const shapeCls = classNames({\n    [`${prefixCls}-circle`]: shape === 'circle',\n    [`${prefixCls}-square`]: shape === 'square',\n    [`${prefixCls}-round`]: shape === 'round'\n  });\n  const sizeStyle = React.useMemo(() => typeof size === 'number' ? {\n    width: size,\n    height: size,\n    lineHeight: `${size}px`\n  } : {}, [size]);\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames(prefixCls, sizeCls, shapeCls, className),\n    style: Object.assign(Object.assign({}, sizeStyle), style)\n  });\n};\nexport default Element;","import { Keyframes } from '@ant-design/cssinjs';\nimport { genComponentStyleHook, mergeToken } from '../../theme/internal';\nconst skeletonClsLoading = new Keyframes(`ant-skeleton-loading`, {\n  '0%': {\n    backgroundPosition: '100% 50%'\n  },\n  '100%': {\n    backgroundPosition: '0 50%'\n  }\n});\nconst genSkeletonElementCommonSize = size => ({\n  height: size,\n  lineHeight: `${size}px`\n});\nconst genSkeletonElementAvatarSize = size => Object.assign({\n  width: size\n}, genSkeletonElementCommonSize(size));\nconst genSkeletonColor = token => ({\n  background: token.skeletonLoadingBackground,\n  backgroundSize: '400% 100%',\n  animationName: skeletonClsLoading,\n  animationDuration: token.skeletonLoadingMotionDuration,\n  animationTimingFunction: 'ease',\n  animationIterationCount: 'infinite'\n});\nconst genSkeletonElementInputSize = size => Object.assign({\n  width: size * 5,\n  minWidth: size * 5\n}, genSkeletonElementCommonSize(size));\nconst genSkeletonElementAvatar = token => {\n  const {\n    skeletonAvatarCls,\n    color,\n    controlHeight,\n    controlHeightLG,\n    controlHeightSM\n  } = token;\n  return {\n    [`${skeletonAvatarCls}`]: Object.assign({\n      display: 'inline-block',\n      verticalAlign: 'top',\n      background: color\n    }, genSkeletonElementAvatarSize(controlHeight)),\n    [`${skeletonAvatarCls}${skeletonAvatarCls}-circle`]: {\n      borderRadius: '50%'\n    },\n    [`${skeletonAvatarCls}${skeletonAvatarCls}-lg`]: Object.assign({}, genSkeletonElementAvatarSize(controlHeightLG)),\n    [`${skeletonAvatarCls}${skeletonAvatarCls}-sm`]: Object.assign({}, genSkeletonElementAvatarSize(controlHeightSM))\n  };\n};\nconst genSkeletonElementInput = token => {\n  const {\n    controlHeight,\n    borderRadiusSM,\n    skeletonInputCls,\n    controlHeightLG,\n    controlHeightSM,\n    color\n  } = token;\n  return {\n    [`${skeletonInputCls}`]: Object.assign({\n      display: 'inline-block',\n      verticalAlign: 'top',\n      background: color,\n      borderRadius: borderRadiusSM\n    }, genSkeletonElementInputSize(controlHeight)),\n    [`${skeletonInputCls}-lg`]: Object.assign({}, genSkeletonElementInputSize(controlHeightLG)),\n    [`${skeletonInputCls}-sm`]: Object.assign({}, genSkeletonElementInputSize(controlHeightSM))\n  };\n};\nconst genSkeletonElementImageSize = size => Object.assign({\n  width: size\n}, genSkeletonElementCommonSize(size));\nconst genSkeletonElementImage = token => {\n  const {\n    skeletonImageCls,\n    imageSizeBase,\n    color,\n    borderRadiusSM\n  } = token;\n  return {\n    [`${skeletonImageCls}`]: Object.assign(Object.assign({\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      verticalAlign: 'top',\n      background: color,\n      borderRadius: borderRadiusSM\n    }, genSkeletonElementImageSize(imageSizeBase * 2)), {\n      [`${skeletonImageCls}-path`]: {\n        fill: '#bfbfbf'\n      },\n      [`${skeletonImageCls}-svg`]: Object.assign(Object.assign({}, genSkeletonElementImageSize(imageSizeBase)), {\n        maxWidth: imageSizeBase * 4,\n        maxHeight: imageSizeBase * 4\n      }),\n      [`${skeletonImageCls}-svg${skeletonImageCls}-svg-circle`]: {\n        borderRadius: '50%'\n      }\n    }),\n    [`${skeletonImageCls}${skeletonImageCls}-circle`]: {\n      borderRadius: '50%'\n    }\n  };\n};\nconst genSkeletonElementButtonShape = (token, size, buttonCls) => {\n  const {\n    skeletonButtonCls\n  } = token;\n  return {\n    [`${buttonCls}${skeletonButtonCls}-circle`]: {\n      width: size,\n      minWidth: size,\n      borderRadius: '50%'\n    },\n    [`${buttonCls}${skeletonButtonCls}-round`]: {\n      borderRadius: size\n    }\n  };\n};\nconst genSkeletonElementButtonSize = size => Object.assign({\n  width: size * 2,\n  minWidth: size * 2\n}, genSkeletonElementCommonSize(size));\nconst genSkeletonElementButton = token => {\n  const {\n    borderRadiusSM,\n    skeletonButtonCls,\n    controlHeight,\n    controlHeightLG,\n    controlHeightSM,\n    color\n  } = token;\n  return Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({\n    [`${skeletonButtonCls}`]: Object.assign({\n      display: 'inline-block',\n      verticalAlign: 'top',\n      background: color,\n      borderRadius: borderRadiusSM,\n      width: controlHeight * 2,\n      minWidth: controlHeight * 2\n    }, genSkeletonElementButtonSize(controlHeight))\n  }, genSkeletonElementButtonShape(token, controlHeight, skeletonButtonCls)), {\n    [`${skeletonButtonCls}-lg`]: Object.assign({}, genSkeletonElementButtonSize(controlHeightLG))\n  }), genSkeletonElementButtonShape(token, controlHeightLG, `${skeletonButtonCls}-lg`)), {\n    [`${skeletonButtonCls}-sm`]: Object.assign({}, genSkeletonElementButtonSize(controlHeightSM))\n  }), genSkeletonElementButtonShape(token, controlHeightSM, `${skeletonButtonCls}-sm`));\n};\n// =============================== Base ===============================\nconst genBaseStyle = token => {\n  const {\n    componentCls,\n    skeletonAvatarCls,\n    skeletonTitleCls,\n    skeletonParagraphCls,\n    skeletonButtonCls,\n    skeletonInputCls,\n    skeletonImageCls,\n    controlHeight,\n    controlHeightLG,\n    controlHeightSM,\n    color,\n    padding,\n    marginSM,\n    borderRadius,\n    skeletonTitleHeight,\n    skeletonBlockRadius,\n    skeletonParagraphLineHeight,\n    controlHeightXS,\n    skeletonParagraphMarginTop\n  } = token;\n  return {\n    [`${componentCls}`]: {\n      display: 'table',\n      width: '100%',\n      [`${componentCls}-header`]: {\n        display: 'table-cell',\n        paddingInlineEnd: padding,\n        verticalAlign: 'top',\n        // Avatar\n        [`${skeletonAvatarCls}`]: Object.assign({\n          display: 'inline-block',\n          verticalAlign: 'top',\n          background: color\n        }, genSkeletonElementAvatarSize(controlHeight)),\n        [`${skeletonAvatarCls}-circle`]: {\n          borderRadius: '50%'\n        },\n        [`${skeletonAvatarCls}-lg`]: Object.assign({}, genSkeletonElementAvatarSize(controlHeightLG)),\n        [`${skeletonAvatarCls}-sm`]: Object.assign({}, genSkeletonElementAvatarSize(controlHeightSM))\n      },\n      [`${componentCls}-content`]: {\n        display: 'table-cell',\n        width: '100%',\n        verticalAlign: 'top',\n        // Title\n        [`${skeletonTitleCls}`]: {\n          width: '100%',\n          height: skeletonTitleHeight,\n          background: color,\n          borderRadius: skeletonBlockRadius,\n          [`+ ${skeletonParagraphCls}`]: {\n            marginBlockStart: controlHeightSM\n          }\n        },\n        // paragraph\n        [`${skeletonParagraphCls}`]: {\n          padding: 0,\n          '> li': {\n            width: '100%',\n            height: skeletonParagraphLineHeight,\n            listStyle: 'none',\n            background: color,\n            borderRadius: skeletonBlockRadius,\n            '+ li': {\n              marginBlockStart: controlHeightXS\n            }\n          }\n        },\n        [`${skeletonParagraphCls}> li:last-child:not(:first-child):not(:nth-child(2))`]: {\n          width: '61%'\n        }\n      },\n      [`&-round ${componentCls}-content`]: {\n        [`${skeletonTitleCls}, ${skeletonParagraphCls} > li`]: {\n          borderRadius\n        }\n      }\n    },\n    [`${componentCls}-with-avatar ${componentCls}-content`]: {\n      // Title\n      [`${skeletonTitleCls}`]: {\n        marginBlockStart: marginSM,\n        [`+ ${skeletonParagraphCls}`]: {\n          marginBlockStart: skeletonParagraphMarginTop\n        }\n      }\n    },\n    // Skeleton element\n    [`${componentCls}${componentCls}-element`]: Object.assign(Object.assign(Object.assign(Object.assign({\n      display: 'inline-block',\n      width: 'auto'\n    }, genSkeletonElementButton(token)), genSkeletonElementAvatar(token)), genSkeletonElementInput(token)), genSkeletonElementImage(token)),\n    // Skeleton Block Button, Input\n    [`${componentCls}${componentCls}-block`]: {\n      width: '100%',\n      [`${skeletonButtonCls}`]: {\n        width: '100%'\n      },\n      [`${skeletonInputCls}`]: {\n        width: '100%'\n      }\n    },\n    // With active animation\n    [`${componentCls}${componentCls}-active`]: {\n      [`\n        ${skeletonTitleCls},\n        ${skeletonParagraphCls} > li,\n        ${skeletonAvatarCls},\n        ${skeletonButtonCls},\n        ${skeletonInputCls},\n        ${skeletonImageCls}\n      `]: Object.assign({}, genSkeletonColor(token))\n    }\n  };\n};\n// ============================== Export ==============================\nexport default genComponentStyleHook('Skeleton', token => {\n  const {\n    componentCls\n  } = token;\n  const skeletonToken = mergeToken(token, {\n    skeletonAvatarCls: `${componentCls}-avatar`,\n    skeletonTitleCls: `${componentCls}-title`,\n    skeletonParagraphCls: `${componentCls}-paragraph`,\n    skeletonButtonCls: `${componentCls}-button`,\n    skeletonInputCls: `${componentCls}-input`,\n    skeletonImageCls: `${componentCls}-image`,\n    imageSizeBase: token.controlHeight * 1.5,\n    skeletonTitleHeight: token.controlHeight / 2,\n    skeletonBlockRadius: token.borderRadiusSM,\n    skeletonParagraphLineHeight: token.controlHeight / 2,\n    skeletonParagraphMarginTop: token.marginLG + token.marginXXS,\n    borderRadius: 100,\n    skeletonLoadingBackground: `linear-gradient(90deg, ${token.color} 25%, ${token.colorGradientEnd} 37%, ${token.color} 63%)`,\n    skeletonLoadingMotionDuration: '1.4s'\n  });\n  return [genBaseStyle(skeletonToken)];\n}, token => {\n  const {\n    colorFillContent,\n    colorFill\n  } = token;\n  return {\n    color: colorFillContent,\n    colorGradientEnd: colorFill\n  };\n});","import classNames from 'classnames';\nimport omit from \"rc-util/es/omit\";\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport Element from './Element';\nimport useStyle from './style';\nconst SkeletonAvatar = props => {\n  const {\n    prefixCls: customizePrefixCls,\n    className,\n    rootClassName,\n    active,\n    shape = 'circle',\n    size = 'default'\n  } = props;\n  const {\n    getPrefixCls\n  } = React.useContext(ConfigContext);\n  const prefixCls = getPrefixCls('skeleton', customizePrefixCls);\n  const [wrapSSR, hashId] = useStyle(prefixCls);\n  const otherProps = omit(props, ['prefixCls', 'className']);\n  const cls = classNames(prefixCls, `${prefixCls}-element`, {\n    [`${prefixCls}-active`]: active\n  }, className, rootClassName, hashId);\n  return wrapSSR( /*#__PURE__*/React.createElement(\"div\", {\n    className: cls\n  }, /*#__PURE__*/React.createElement(Element, Object.assign({\n    prefixCls: `${prefixCls}-avatar`,\n    shape: shape,\n    size: size\n  }, otherProps))));\n};\nexport default SkeletonAvatar;","import classNames from 'classnames';\nimport omit from \"rc-util/es/omit\";\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport Element from './Element';\nimport useStyle from './style';\nconst SkeletonButton = props => {\n  const {\n    prefixCls: customizePrefixCls,\n    className,\n    rootClassName,\n    active,\n    block = false,\n    size = 'default'\n  } = props;\n  const {\n    getPrefixCls\n  } = React.useContext(ConfigContext);\n  const prefixCls = getPrefixCls('skeleton', customizePrefixCls);\n  const [wrapSSR, hashId] = useStyle(prefixCls);\n  const otherProps = omit(props, ['prefixCls']);\n  const cls = classNames(prefixCls, `${prefixCls}-element`, {\n    [`${prefixCls}-active`]: active,\n    [`${prefixCls}-block`]: block\n  }, className, rootClassName, hashId);\n  return wrapSSR( /*#__PURE__*/React.createElement(\"div\", {\n    className: cls\n  }, /*#__PURE__*/React.createElement(Element, Object.assign({\n    prefixCls: `${prefixCls}-button`,\n    size: size\n  }, otherProps))));\n};\nexport default SkeletonButton;","// This icon file is generated automatically.\nvar DotChartOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M888 792H200V168c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v688c0 4.4 3.6 8 8 8h752c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zM288 604a64 64 0 10128 0 64 64 0 10-128 0zm118-224a48 48 0 1096 0 48 48 0 10-96 0zm158 228a96 96 0 10192 0 96 96 0 10-192 0zm148-314a56 56 0 10112 0 56 56 0 10-112 0z\" } }] }, \"name\": \"dot-chart\", \"theme\": \"outlined\" };\nexport default DotChartOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport DotChartOutlinedSvg from \"@ant-design/icons-svg/es/asn/DotChartOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar DotChartOutlined = function DotChartOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: DotChartOutlinedSvg\n  }));\n};\nDotChartOutlined.displayName = 'DotChartOutlined';\nexport default /*#__PURE__*/React.forwardRef(DotChartOutlined);","import DotChartOutlined from \"@ant-design/icons/es/icons/DotChartOutlined\";\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport useStyle from './style';\nconst SkeletonNode = props => {\n  const {\n    prefixCls: customizePrefixCls,\n    className,\n    rootClassName,\n    style,\n    active,\n    children\n  } = props;\n  const {\n    getPrefixCls\n  } = React.useContext(ConfigContext);\n  const prefixCls = getPrefixCls('skeleton', customizePrefixCls);\n  const [wrapSSR, hashId] = useStyle(prefixCls);\n  const cls = classNames(prefixCls, `${prefixCls}-element`, {\n    [`${prefixCls}-active`]: active\n  }, hashId, className, rootClassName);\n  const content = children !== null && children !== void 0 ? children : /*#__PURE__*/React.createElement(DotChartOutlined, null);\n  return wrapSSR( /*#__PURE__*/React.createElement(\"div\", {\n    className: cls\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(`${prefixCls}-image`, className),\n    style: style\n  }, content)));\n};\nexport default SkeletonNode;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport useStyle from './style';\nconst path = 'M365.714286 329.142857q0 45.714286-32.036571 77.677714t-77.677714 32.036571-77.677714-32.036571-32.036571-77.677714 32.036571-77.677714 77.677714-32.036571 77.677714 32.036571 32.036571 77.677714zM950.857143 548.571429l0 256-804.571429 0 0-109.714286 182.857143-182.857143 91.428571 91.428571 292.571429-292.571429zM1005.714286 146.285714l-914.285714 0q-7.460571 0-12.873143 5.412571t-5.412571 12.873143l0 694.857143q0 7.460571 5.412571 12.873143t12.873143 5.412571l914.285714 0q7.460571 0 12.873143-5.412571t5.412571-12.873143l0-694.857143q0-7.460571-5.412571-12.873143t-12.873143-5.412571zM1097.142857 164.571429l0 694.857143q0 37.741714-26.843429 64.585143t-64.585143 26.843429l-914.285714 0q-37.741714 0-64.585143-26.843429t-26.843429-64.585143l0-694.857143q0-37.741714 26.843429-64.585143t64.585143-26.843429l914.285714 0q37.741714 0 64.585143 26.843429t26.843429 64.585143z';\nconst SkeletonImage = props => {\n  const {\n    prefixCls: customizePrefixCls,\n    className,\n    rootClassName,\n    style,\n    active\n  } = props;\n  const {\n    getPrefixCls\n  } = React.useContext(ConfigContext);\n  const prefixCls = getPrefixCls('skeleton', customizePrefixCls);\n  const [wrapSSR, hashId] = useStyle(prefixCls);\n  const cls = classNames(prefixCls, `${prefixCls}-element`, {\n    [`${prefixCls}-active`]: active\n  }, className, rootClassName, hashId);\n  return wrapSSR( /*#__PURE__*/React.createElement(\"div\", {\n    className: cls\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(`${prefixCls}-image`, className),\n    style: style\n  }, /*#__PURE__*/React.createElement(\"svg\", {\n    viewBox: \"0 0 1098 1024\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    className: `${prefixCls}-image-svg`\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: path,\n    className: `${prefixCls}-image-path`\n  })))));\n};\nexport default SkeletonImage;","import classNames from 'classnames';\nimport omit from \"rc-util/es/omit\";\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport Element from './Element';\nimport useStyle from './style';\nconst SkeletonInput = props => {\n  const {\n    prefixCls: customizePrefixCls,\n    className,\n    rootClassName,\n    active,\n    block,\n    size = 'default'\n  } = props;\n  const {\n    getPrefixCls\n  } = React.useContext(ConfigContext);\n  const prefixCls = getPrefixCls('skeleton', customizePrefixCls);\n  const [wrapSSR, hashId] = useStyle(prefixCls);\n  const otherProps = omit(props, ['prefixCls']);\n  const cls = classNames(prefixCls, `${prefixCls}-element`, {\n    [`${prefixCls}-active`]: active,\n    [`${prefixCls}-block`]: block\n  }, className, rootClassName, hashId);\n  return wrapSSR( /*#__PURE__*/React.createElement(\"div\", {\n    className: cls\n  }, /*#__PURE__*/React.createElement(Element, Object.assign({\n    prefixCls: `${prefixCls}-input`,\n    size: size\n  }, otherProps))));\n};\nexport default SkeletonInput;","import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport classNames from 'classnames';\nimport * as React from 'react';\nconst Paragraph = props => {\n  const getWidth = index => {\n    const {\n      width,\n      rows = 2\n    } = props;\n    if (Array.isArray(width)) {\n      return width[index];\n    }\n    // last paragraph\n    if (rows - 1 === index) {\n      return width;\n    }\n    return undefined;\n  };\n  const {\n    prefixCls,\n    className,\n    style,\n    rows\n  } = props;\n  const rowList = _toConsumableArray(Array(rows)).map((_, index) =>\n  /*#__PURE__*/\n  // eslint-disable-next-line react/no-array-index-key\n  React.createElement(\"li\", {\n    key: index,\n    style: {\n      width: getWidth(index)\n    }\n  }));\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    className: classNames(prefixCls, className),\n    style: style\n  }, rowList);\n};\nexport default Paragraph;","/* eslint-disable jsx-a11y/heading-has-content */\nimport classNames from 'classnames';\nimport * as React from 'react';\nconst Title = _ref => {\n  let {\n    prefixCls,\n    className,\n    width,\n    style\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"h3\", {\n    className: classNames(prefixCls, className),\n    style: Object.assign({\n      width\n    }, style)\n  });\n};\nexport default Title;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport SkeletonAvatar from './Avatar';\nimport SkeletonButton from './Button';\nimport SkeletonNode from './Node';\nimport Element from './Element';\nimport SkeletonImage from './Image';\nimport SkeletonInput from './Input';\nimport Paragraph from './Paragraph';\nimport Title from './Title';\nimport useStyle from './style';\nfunction getComponentProps(prop) {\n  if (prop && typeof prop === 'object') {\n    return prop;\n  }\n  return {};\n}\nfunction getAvatarBasicProps(hasTitle, hasParagraph) {\n  if (hasTitle && !hasParagraph) {\n    // Square avatar\n    return {\n      size: 'large',\n      shape: 'square'\n    };\n  }\n  return {\n    size: 'large',\n    shape: 'circle'\n  };\n}\nfunction getTitleBasicProps(hasAvatar, hasParagraph) {\n  if (!hasAvatar && hasParagraph) {\n    return {\n      width: '38%'\n    };\n  }\n  if (hasAvatar && hasParagraph) {\n    return {\n      width: '50%'\n    };\n  }\n  return {};\n}\nfunction getParagraphBasicProps(hasAvatar, hasTitle) {\n  const basicProps = {};\n  // Width\n  if (!hasAvatar || !hasTitle) {\n    basicProps.width = '61%';\n  }\n  // Rows\n  if (!hasAvatar && hasTitle) {\n    basicProps.rows = 3;\n  } else {\n    basicProps.rows = 2;\n  }\n  return basicProps;\n}\nconst Skeleton = props => {\n  const {\n    prefixCls: customizePrefixCls,\n    loading,\n    className,\n    rootClassName,\n    style,\n    children,\n    avatar = false,\n    title = true,\n    paragraph = true,\n    active,\n    round\n  } = props;\n  const {\n    getPrefixCls,\n    direction\n  } = React.useContext(ConfigContext);\n  const prefixCls = getPrefixCls('skeleton', customizePrefixCls);\n  const [wrapSSR, hashId] = useStyle(prefixCls);\n  if (loading || !('loading' in props)) {\n    const hasAvatar = !!avatar;\n    const hasTitle = !!title;\n    const hasParagraph = !!paragraph;\n    // Avatar\n    let avatarNode;\n    if (hasAvatar) {\n      const avatarProps = Object.assign(Object.assign({\n        prefixCls: `${prefixCls}-avatar`\n      }, getAvatarBasicProps(hasTitle, hasParagraph)), getComponentProps(avatar));\n      // We direct use SkeletonElement as avatar in skeleton internal.\n      avatarNode = /*#__PURE__*/React.createElement(\"div\", {\n        className: `${prefixCls}-header`\n      }, /*#__PURE__*/React.createElement(Element, Object.assign({}, avatarProps)));\n    }\n    let contentNode;\n    if (hasTitle || hasParagraph) {\n      // Title\n      let $title;\n      if (hasTitle) {\n        const titleProps = Object.assign(Object.assign({\n          prefixCls: `${prefixCls}-title`\n        }, getTitleBasicProps(hasAvatar, hasParagraph)), getComponentProps(title));\n        $title = /*#__PURE__*/React.createElement(Title, Object.assign({}, titleProps));\n      }\n      // Paragraph\n      let paragraphNode;\n      if (hasParagraph) {\n        const paragraphProps = Object.assign(Object.assign({\n          prefixCls: `${prefixCls}-paragraph`\n        }, getParagraphBasicProps(hasAvatar, hasTitle)), getComponentProps(paragraph));\n        paragraphNode = /*#__PURE__*/React.createElement(Paragraph, Object.assign({}, paragraphProps));\n      }\n      contentNode = /*#__PURE__*/React.createElement(\"div\", {\n        className: `${prefixCls}-content`\n      }, $title, paragraphNode);\n    }\n    const cls = classNames(prefixCls, {\n      [`${prefixCls}-with-avatar`]: hasAvatar,\n      [`${prefixCls}-active`]: active,\n      [`${prefixCls}-rtl`]: direction === 'rtl',\n      [`${prefixCls}-round`]: round\n    }, className, rootClassName, hashId);\n    return wrapSSR( /*#__PURE__*/React.createElement(\"div\", {\n      className: cls,\n      style: style\n    }, avatarNode, contentNode));\n  }\n  return typeof children !== 'undefined' ? children : null;\n};\nSkeleton.Button = SkeletonButton;\nSkeleton.Avatar = SkeletonAvatar;\nSkeleton.Input = SkeletonInput;\nSkeleton.Image = SkeletonImage;\nSkeleton.Node = SkeletonNode;\nif (process.env.NODE_ENV !== 'production') {\n  Skeleton.displayName = 'Skeleton';\n}\nexport default Skeleton;","import Skeleton from './Skeleton';\nexport default Skeleton;","import { Avatar, List, Skeleton } from \"antd\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, NavLink, Outlet } from \"react-router-dom\";\r\nimport ProtectedRoute from \"../../components/ProtectedRoute\";\r\nimport { fetchUsers } from \"../../redux/features/chatSlice\";\r\nimport \"./styles.css\";\r\n\r\nfunction Chat() {\r\n  const dispatch = useDispatch();\r\n  const { list, total, error, loading } = useSelector(\r\n    (state) => state.chat.users\r\n  );\r\n  console.log(\"list\", list);\r\n  useEffect(() => {\r\n    dispatch(fetchUsers());\r\n  }, []);\r\n\r\n  return (\r\n    <ProtectedRoute>\r\n      <div className=\"chat-container\">\r\n        <div className=\"users\">\r\n          <h1>List of Users</h1>\r\n          <List\r\n            itemLayout=\"horizontal\"\r\n            dataSource={list}\r\n            renderItem={(item, index) => (\r\n              <Skeleton loading={loading} active avatar>\r\n                <NavLink to={`/chat/${item._id}`}>\r\n                  <List.Item>\r\n                    <List.Item.Meta\r\n                      avatar={\r\n                        <Avatar src={\"http://localhost:1905/\" + item.image} />\r\n                      }\r\n                      title={<a>{item.email}</a>}\r\n                      description=\"Ant Design, a design language for background applications, is refined by Ant UED Team\"\r\n                    />\r\n                  </List.Item>\r\n                </NavLink>\r\n              </Skeleton>\r\n            )}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"inbox\">\r\n          <Outlet />\r\n        </div>\r\n      </div>\r\n    </ProtectedRoute>\r\n  );\r\n}\r\nexport default Chat;\r\n","// This icon file is generated automatically.\nvar CloseOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z\" } }] }, \"name\": \"close\", \"theme\": \"outlined\" };\nexport default CloseOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport CloseOutlinedSvg from \"@ant-design/icons-svg/es/asn/CloseOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar CloseOutlined = function CloseOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: CloseOutlinedSvg\n  }));\n};\nCloseOutlined.displayName = 'CloseOutlined';\nexport default /*#__PURE__*/React.forwardRef(CloseOutlined);"],"names":["props","_classNames","_classNames2","prefixCls","className","style","size","shape","sizeCls","classNames","_defineProperty","concat","shapeCls","sizeStyle","React","width","height","lineHeight","Object","assign","skeletonClsLoading","Keyframes","backgroundPosition","genSkeletonElementCommonSize","genSkeletonElementAvatarSize","genSkeletonElementInputSize","minWidth","genSkeletonElementImageSize","genSkeletonElementButtonShape","token","buttonCls","_ref4","skeletonButtonCls","borderRadius","genSkeletonElementButtonSize","genBaseStyle","_$concat","_$concat3","_$concat4","_$concat$concat2","_ref5","componentCls","skeletonAvatarCls","skeletonTitleCls","skeletonParagraphCls","skeletonInputCls","skeletonImageCls","controlHeight","controlHeightLG","controlHeightSM","color","padding","marginSM","skeletonTitleHeight","skeletonBlockRadius","skeletonParagraphLineHeight","controlHeightXS","skeletonParagraphMarginTop","display","paddingInlineEnd","verticalAlign","background","marginBlockStart","listStyle","borderRadiusSM","genSkeletonElementButton","_ref","genSkeletonElementAvatar","_ref2","genSkeletonElementInput","_Object$assign","_ref3","imageSizeBase","alignItems","justifyContent","fill","maxWidth","maxHeight","genSkeletonElementImage","skeletonLoadingBackground","backgroundSize","animationName","animationDuration","skeletonLoadingMotionDuration","animationTimingFunction","animationIterationCount","genSkeletonColor","genComponentStyleHook","skeletonToken","mergeToken","marginLG","marginXXS","colorGradientEnd","colorFillContent","colorFill","customizePrefixCls","rootClassName","active","_props$shape","_props$size","getPrefixCls","ConfigContext","_useStyle","useStyle","_useStyle2","_slicedToArray","wrapSSR","hashId","otherProps","omit","cls","Element","_props$block","block","DotChartOutlined","ref","AntdIcon","_objectSpread","icon","DotChartOutlinedSvg","displayName","children","content","viewBox","xmlns","d","getWidth","index","_props$rows","rows","Array","isArray","rowList","_toConsumableArray","map","_","key","getComponentProps","prop","Skeleton","loading","_props$avatar","avatar","_props$title","title","_props$paragraph","paragraph","round","_React$useContext","direction","avatarNode","contentNode","hasAvatar","hasTitle","hasParagraph","avatarProps","getAvatarBasicProps","$title","paragraphNode","titleProps","getTitleBasicProps","Title","paragraphProps","basicProps","getParagraphBasicProps","Paragraph","Button","SkeletonButton","Avatar","SkeletonAvatar","Input","SkeletonInput","Image","SkeletonImage","Node","SkeletonNode","dispatch","useDispatch","_useSelector","useSelector","state","chat","users","list","total","error","console","log","useEffect","fetchUsers","_jsx","ProtectedRoute","_jsxs","List","itemLayout","dataSource","renderItem","item","NavLink","to","_id","src","image","email","description","Outlet","CloseOutlined","CloseOutlinedSvg"],"sourceRoot":""}